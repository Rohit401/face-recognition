# Face Recognition

# Importing the libraries
import cv2
count=0

# Loading the cascades
face_cascade = cv2.CascadeClassifier(r'C:\Users\samal\haarcascade_frontalface_default.xml')
eye_cascade = cv2.CascadeClassifier(r'C:\Users\samal\haarcascade_eye.xml')

# Defining a function that will do the detections
def detect(gray, frame):
    global count
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)
    for (a, b, w, h) in faces:
        print (faces.shape)
        print ("Number of faces detected: " + str(faces.shape[0]))
        print("Data Found")
        cv2.putText(frame, "Number of faces detected: " + str(faces.shape[0]), (10, 30),
					cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 0, 255), 2)
        cv2.rectangle(frame, (a, b), (a+w, b+h), (255, 0, 0), 2)
        roi_gray = gray[b:b+h, a:a+w]
        roi_color = frame[b:b+h, a:a+w]
        count=count+1
        cv2.imwrite('rohitt/face_'+str(count)+'.jpg',roi_color)
        eyes = eye_cascade.detectMultiScale(roi_gray, 1.1, 3)
        for (ea, eb, ew, eh) in eyes:
            cv2.rectangle(roi_color, (ea, eb), (ea+ew, eb+eh), (0, 255, 0), 2)
    return frame

# Doing some Face Recognition with the webcam
video_capture = cv2.VideoCapture(0)
while count<1500:
    data,frame = video_capture.read()
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    canvas = detect(gray, frame)
    cv2.imshow('Video', canvas)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
video_capture.release()
cv2.destroyAllWindows()
